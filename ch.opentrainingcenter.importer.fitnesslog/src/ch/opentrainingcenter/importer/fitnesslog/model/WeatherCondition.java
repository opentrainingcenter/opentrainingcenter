//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2011.12.11 at 09:02:07 AM CET
//

package ch.opentrainingcenter.importer.fitnesslog.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for WeatherCondition.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * 
 * <pre>
 * &lt;simpleType name="WeatherCondition">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Clear"/>
 *     &lt;enumeration value="ScatterClouds"/>
 *     &lt;enumeration value="PartClouds"/>
 *     &lt;enumeration value="Overcast"/>
 *     &lt;enumeration value="MostClouds"/>
 *     &lt;enumeration value="Clouds"/>
 *     &lt;enumeration value="ChanceRain"/>
 *     &lt;enumeration value="LightDrizzle"/>
 *     &lt;enumeration value="LightRain"/>
 *     &lt;enumeration value="Rain"/>
 *     &lt;enumeration value="HeavyRain"/>
 *     &lt;enumeration value="ChanceThunder"/>
 *     &lt;enumeration value="Thunder"/>
 *     &lt;enumeration value="Snow"/>
 *     &lt;enumeration value="Haze"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "WeatherCondition")
@XmlEnum
public enum WeatherCondition {

    @XmlEnumValue("Clear")
    CLEAR("Clear"), //$NON-NLS-1$
    @XmlEnumValue("ScatterClouds")
    SCATTER_CLOUDS("ScatterClouds"), //$NON-NLS-1$
    @XmlEnumValue("PartClouds")
    PART_CLOUDS("PartClouds"), //$NON-NLS-1$
    @XmlEnumValue("Overcast")
    OVERCAST("Overcast"), //$NON-NLS-1$
    @XmlEnumValue("MostClouds")
    MOST_CLOUDS("MostClouds"), //$NON-NLS-1$
    @XmlEnumValue("Clouds")
    CLOUDS("Clouds"), //$NON-NLS-1$
    @XmlEnumValue("ChanceRain")
    CHANCE_RAIN("ChanceRain"), //$NON-NLS-1$
    @XmlEnumValue("LightDrizzle")
    LIGHT_DRIZZLE("LightDrizzle"), //$NON-NLS-1$
    @XmlEnumValue("LightRain")
    LIGHT_RAIN("LightRain"), //$NON-NLS-1$
    @XmlEnumValue("Rain")
    RAIN("Rain"), //$NON-NLS-1$
    @XmlEnumValue("HeavyRain")
    HEAVY_RAIN("HeavyRain"), //$NON-NLS-1$
    @XmlEnumValue("ChanceThunder")
    CHANCE_THUNDER("ChanceThunder"), //$NON-NLS-1$
    @XmlEnumValue("Thunder")
    THUNDER("Thunder"), //$NON-NLS-1$
    @XmlEnumValue("Snow")
    SNOW("Snow"), //$NON-NLS-1$
    @XmlEnumValue("Haze")
    HAZE("Haze");//$NON-NLS-1$
    private final String value;

    WeatherCondition(final String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static WeatherCondition fromValue(final String v) {
        for (final WeatherCondition c : WeatherCondition.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
